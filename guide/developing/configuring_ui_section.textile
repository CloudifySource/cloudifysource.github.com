---
layout: default
title: Configuring the Web Management Console
category: Developing Recipes
publish: true
abstract: Explains how to configure the web management console to present the information generated by probe and monitoring plugins
pageord: 11
---

The Cloudify web management console allows you to monitor your applications. Yu can use the service descriptor recipe file to describe the layout of monitored metrics in the management console's UI.

h2. What can be Configured?

The Cloudify web management console displays custom metrics using the Line-Bar Chart and the Balance Gauge (Additional widgets will be added in future versions).
Each widget displays a default metric but has a drop-down menu to allow the user to choose other metrics

The images below show the GUI widgets and the Metrics drop down menu:
!/guide/images/recipes/widgets.png!

h2. Built-In and Custom Metrics

By default, Cloudify monitors generic metrics such as CPU and memory utilization. But it can also monitor any other, more specific, metrics using one of the following custom mechanisms:
* "Monitoring Probes":/guide/plugins_and_probes/probes--Groovy closures that emit metrics and their current value.
* "Monitoring Plugins":/guide/plugins_and_probes/develop_your_plugin--Java classes that emit metrics and their current value.

Cloudify invokes the probe or plugin every 5 seconds, and expects to receive a *Map* that contains the names of the metrics as keys and their respective values. Both the built-in and custom metrics can be displayed in the web management console, and the service descriptor file has a dedicated section which controls how they are displayed.

h2. Configuring the Metrics Menus

In the web management console, the *Applications* view contains a dedicated pane that is used to display the monitored metrics, and allows you to choose between the metrics using a dedicated drop-down combo box (metric menu). The metric menus are divided into logical groups of metrics. The recipe allows you to configure these groups and determine which metrics (built in as well as custom) will belong to each menu. Here's an example for how this is done:

<script src="https://gist.github.com/1766801.js?file=ui_config.groovy"></script>

In the above recipe snippet, we have ...
todo:


h2. Configuring the Metrics Pane

You can also control the appearance and default metrics that will appear in the metrics pane for each service. You can determine how many widgets will show up in the Metrics section of the UI, and what will be the metric presented by default for each widget.


h2. List of Built-In Metrics


h2. Built-In Recipes as an Example

The best way to start with metrics configuraiton is to look at one of the built in examples, e.g. the PetClinic recipe under &lt;Cloudify installation root&gt;/examples/petclinic. The tomcat recipe (&lt;Cloudify installation root&gt;/examples/petclinic/tomcat/tomcat-service.groovy) uses a the JMX plugin, whereas the MongoDB recipes (e.g. &lt;Cloudify installation root&gt;/examples/petclinic/mongod) use a "custom plugin":/guide/plugins_and_probes/develop_your_plugin that connects to MongoDB using its Java API and fetches metrics using specific MongoDB API commands.
